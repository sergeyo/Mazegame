///////////////////////////////////////////////////////////
//  Location.cs
//  Implementation of the Class Location
//  Generated by Enterprise Architect
//  Created on:      28-Apr-2014 10:13:37 PM
//  Original author: Gsimmons
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;

namespace Mazegame.Entity {
	public class Location
	{
	    private Dictionary<string, Exit> exits = new Dictionary<string, Exit>();

	    public Location(string description, string label)
		{
            Description = description;
		    Label = label;
            CollectableItems = new List<Item>();
		}

	    public void AddExit(string exitLabel, Exit theExit)
	    {
	        exits[exitLabel] = theExit;
	    }

		public string Description { get; private set; }

        public string Label { get; private set; }

        public IReadOnlyDictionary<string, Exit> Exits { get { return exits; } }

        public List<Item> CollectableItems { get; set; }

        public NonPlayerCharacter NPC { get; set; }

        public string GetLongDescription()
        {
            return
                "    " + Label + " - " + Description
                + "\nThere are some exits from this location:\n" + GetExitsList()
                + (CollectableItems.Any() ? "\nThere are some items you can collect (use getItem command)" : "")
                + (NPC != null ? $"\nYou see some friendly person, {NPC.Name}. You may group with him to continue your journey together" : "");
        }

        public string GetExitsList()
        {
            return string.Join("\n", Exits.Select(kv => kv.Key + ": " + kv.Value.Description));
        }
    }
}